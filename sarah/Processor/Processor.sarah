<?php namespace sarah;
	include_once(__DIR__."/Input/Input.Processor");
	include_once(__DIR__."/Output/Output.Processor");
	class Processor {

		function __construct($components) {
			$this->language = $components["language"];
		}

		public function answerQuestion($sentence) {
			$input = new \sarah\Processor\Input();
			//translate language data into Sarah's input data
			$input->digest($sentence);
			print_r($input);
			print_r("<br><br>");
			//create a memory layer with context from input
			\sarah\Memory::createLayer($input);

			$output = new \sarah\Processor\Output();
			$inputConclusion = $input->conclude();
			print_r($inputConclusion);
			print_r("<br><br>");
			
			$output->digest($inputConclusion);
			$finalResponse = $output->conclude();
			return $finalResponse;
		}

		public function nextAction($input) {
			//Here it will decide whether should it react right away or analize sentence structure before react
			global $dbk;
			global $userid;

			/*
			//Is Sarah expecting an answer from a question
			$query = $dbk->prepare("SELECT * FROM users WHERE uid = ?");
			$query->execute(array($userid));
			if($query->rowCount() == 1) {
				$user = $query->fetch();
				if(!$user["askingQuestion"]) {
					return "immediateResponse";
				} else {
					$query = $dbk->prepare("SELECT * FROM Questions WHERE question=?");
					$query->bindParam(1, $user["askingQuestion"]);
					$query->execute();	
					if($query->rowCount() > 0) {
						$result = $query->fetch();
						$validation = create_function('$input',$result["validation"]);
						if($validation($input)) {
							$query = $dbk->prepare("UPDATE users SET askingQuestion=NULL WHERE uid=?");
							$query->execute(array($userid));
							return "responseToAnswer";
						}
					}
				}
			}
			$query = $dbk->prepare("UPDATE users SET askingQuestion=NULL WHERE uid=?");
			$query->execute(array($userid));
			*/

			return "immediateResponse";
		}

		
	}